-- Удаление таблиц (Важен порядок удаления таблиц)
DROP TABLE IF EXISTS FILMS_GENRES;
DROP TABLE IF EXISTS GENRES;
DROP TABLE IF EXISTS USERS_FILMS;
DROP TABLE IF EXISTS FILMS;
DROP TABLE IF EXISTS RATINGS;
DROP TABLE IF EXISTS USERS_RELATIONSHIPS;
DROP TABLE IF EXISTS USERS;
DROP TABLE IF EXISTS RELATIONSHIPS;
DROP TABLE IF EXISTS RELATIONSHIP_ATTRIBUTES;

-- Создание таблиц
CREATE TABLE IF NOT EXISTS RATINGS (
	ID INTEGER NOT NULL AUTO_INCREMENT,
	FULL_NAME CHARACTER VARYING NOT NULL,
	CONSTRAINT RATINGS_PK PRIMARY KEY (ID)
);
COMMENT ON TABLE RATINGS IS 'Таблица рейтингов';
COMMENT ON COLUMN RATINGS.ID IS 'Идентификатор записи';
COMMENT ON COLUMN RATINGS.FULL_NAME IS 'Описание';

CREATE TABLE IF NOT EXISTS GENRES (
	ID INTEGER NOT NULL AUTO_INCREMENT,
	FULL_NAME CHARACTER VARYING NOT NULL,
	CONSTRAINT GENRES_PK PRIMARY KEY (ID),
	CONSTRAINT GENRES_UNIQUE_FULL_NAME UNIQUE (FULL_NAME)
);
COMMENT ON TABLE GENRES IS 'Таблица жанров';
COMMENT ON COLUMN GENRES.ID IS 'Идентификатор записи';
COMMENT ON COLUMN GENRES.FULL_NAME IS 'Наименование';

CREATE TABLE IF NOT EXISTS FILMS (
	ID INTEGER NOT NULL AUTO_INCREMENT,
	FULL_NAME CHARACTER VARYING NOT NULL,
	DESCRIPTION CHARACTER(200) NOT NULL,
	RELEASE_DATE DATE,
	DURATION INTEGER,
	RATING_ID INTEGER,
	CONSTRAINT FILMS_PK PRIMARY KEY (ID),
	CONSTRAINT FILMS_RATINGS_FK FOREIGN KEY (RATING_ID) REFERENCES RATINGS(ID),
	CONSTRAINT FILMS_DURATION_CHK CHECK (DURATION > 0)
);
COMMENT ON TABLE FILMS IS 'Таблица фильмов';
COMMENT ON COLUMN FILMS.ID IS 'Идентификатор записи';
COMMENT ON COLUMN FILMS.FULL_NAME IS 'Наименование';
COMMENT ON COLUMN FILMS.DESCRIPTION IS 'Описание';
COMMENT ON COLUMN FILMS.RELEASE_DATE IS 'Дата релиза';
COMMENT ON COLUMN FILMS.DURATION IS 'Длительность';
COMMENT ON COLUMN FILMS.RATING_ID IS 'Идентификатор рейтинга';

CREATE TABLE IF NOT EXISTS FILMS_GENRES (
	ID INTEGER NOT NULL AUTO_INCREMENT,
	FILM_ID INTEGER NOT NULL,
	GENRE_ID INTEGER NOT NULL,
	CONSTRAINT FILMS_GENRES_PK PRIMARY KEY (ID),
	CONSTRAINT FILMS_GENRES_UNIQUE_FILM_ID_GENRE_ID UNIQUE (FILM_ID,GENRE_ID),
	CONSTRAINT FILMS_GENRES_FILMS_FK FOREIGN KEY (FILM_ID) REFERENCES FILMS(ID),
	CONSTRAINT FILMS_GENRES_GENRES_FK FOREIGN KEY (GENRE_ID) REFERENCES GENRES(ID)
);
COMMENT ON TABLE FILMS_GENRES IS 'Связь между фильмами и жанрами';
COMMENT ON COLUMN FILMS_GENRES.ID IS 'Идентификатор записи';
COMMENT ON COLUMN FILMS_GENRES.FILM_ID IS 'Идентификатор фильма';
COMMENT ON COLUMN FILMS_GENRES.GENRE_ID IS 'Идентификатор жанра';

CREATE TABLE IF NOT EXISTS USERS (
	ID INTEGER NOT NULL AUTO_INCREMENT,
	EMAIL CHARACTER(256) NOT NULL,
	LOGIN CHARACTER(256) NOT NULL,
	FULL_NAME CHARACTER VARYING,
	BIRTHDAY DATE NOT NULL,
	CONSTRAINT USERS_PK PRIMARY KEY (ID),
	CONSTRAINT USERS_UNIQUE_EMAIL UNIQUE (EMAIL),
	CONSTRAINT USERS_UNIQUE_LOGIN UNIQUE (LOGIN)
);
COMMENT ON TABLE USERS IS 'Таблица пользователей';
COMMENT ON COLUMN USERS.ID IS 'Идентификатор записи';
COMMENT ON COLUMN USERS.EMAIL IS 'Адрес электронной почты';
COMMENT ON COLUMN USERS.LOGIN IS 'Логин';
COMMENT ON COLUMN USERS.FULL_NAME IS 'Имя';
COMMENT ON COLUMN USERS.BIRTHDAY IS 'Дата рождения';

CREATE TABLE IF NOT EXISTS USERS_FILMS (
	ID INTEGER NOT NULL AUTO_INCREMENT,
	USER_ID INTEGER NOT NULL,
	FILM_ID INTEGER NOT NULL,
	CONSTRAINT USERS_FILMS_PK PRIMARY KEY (ID),
	CONSTRAINT USERS_FILMS_UNIQUE_USER_ID_FILM_ID UNIQUE (USER_ID,FILM_ID),
	CONSTRAINT USERS_FILMS_USERS_FK FOREIGN KEY (USER_ID) REFERENCES USERS(ID),
	CONSTRAINT USERS_FILMS_FILMS_FK FOREIGN KEY (FILM_ID) REFERENCES FILMS(ID)
);
COMMENT ON TABLE USERS_FILMS IS 'Связь между пользователями и фильмами';
COMMENT ON COLUMN USERS_FILMS.ID IS 'Идентификатор записи';
COMMENT ON COLUMN USERS_FILMS.USER_ID IS 'Идентификатор пользователя';
COMMENT ON COLUMN USERS_FILMS.FILM_ID IS 'Идентификатор фильма';

CREATE TABLE RELATIONSHIP_ATTRIBUTES (
	ID INTEGER NOT NULL AUTO_INCREMENT,
	ATTRIBUTE_TYPE INTEGER NOT NULL,
	FULL_NAME CHARACTER VARYING,
	CONSTRAINT RELATIONSHIP_ATTRIBUTES_PK PRIMARY KEY (ID),
	CONSTRAINT RELATIONSHIP_ATTRIBUTES_UNIQUE_ATTRIBUTE_TYPE_FULL_NAME UNIQUE (ATTRIBUTE_TYPE,FULL_NAME)
);
COMMENT ON TABLE RELATIONSHIP_ATTRIBUTES IS 'Атрибуты отношений';
COMMENT ON COLUMN RELATIONSHIP_ATTRIBUTES.ID IS 'Идентификатор атрибута';
COMMENT ON COLUMN RELATIONSHIP_ATTRIBUTES.ATTRIBUTE_TYPE IS 'Тип атрибута отношений';
COMMENT ON COLUMN RELATIONSHIP_ATTRIBUTES.FULL_NAME IS 'Значение атрибута отношений';

CREATE TABLE IF NOT EXISTS RELATIONSHIPS (
	ID INTEGER NOT NULL AUTO_INCREMENT,
	TYPE_ID INTEGER NOT NULL,
	STATUS_ID INTEGER,
	CONSTRAINT RELATIONSHIPS_PK PRIMARY KEY (ID),
	CONSTRAINT RELATIONSHIPS_UNIQUE_TYPE_ID_STATUS_ID UNIQUE (TYPE_ID,STATUS_ID),
	CONSTRAINT RELATIONSHIPS_RELATIONSHIP_TYPES_FK FOREIGN KEY (TYPE_ID) REFERENCES RELATIONSHIP_ATTRIBUTES(ID),
	CONSTRAINT RELATIONSHIPS_RELATIONSHIP_STATUSES_FK FOREIGN KEY (STATUS_ID) REFERENCES RELATIONSHIP_ATTRIBUTES(ID)
);
COMMENT ON TABLE RELATIONSHIPS IS 'Таблица отношений';
COMMENT ON COLUMN RELATIONSHIPS.ID IS 'Идентификатор записей';
COMMENT ON COLUMN RELATIONSHIPS.TYPE_ID IS 'Идентификатор типа отношений';
COMMENT ON COLUMN RELATIONSHIPS.STATUS_ID IS 'Идентификатор статуса отношений';

CREATE TABLE USERS_RELATIONSHIPS (
	ID INTEGER NOT NULL AUTO_INCREMENT,
	USER_ID INTEGER NOT NULL,
	RELATIONSHIP_ID INTEGER NOT NULL,
	CONSTRAINT USERS_RELATIONSHIPS_PK PRIMARY KEY (ID),
	CONSTRAINT USERS_RELATIONSHIPS_UNIQUE_USER_ID_RELATIONSHIP_ID UNIQUE (USER_ID,RELATIONSHIP_ID),
	CONSTRAINT USERS_RELATIONSHIPS_USERS_FK FOREIGN KEY (USER_ID) REFERENCES USERS(ID),
	CONSTRAINT USERS_RELATIONSHIPS_RELATIONSHIPS_FK FOREIGN KEY (RELATIONSHIP_ID) REFERENCES RELATIONSHIPS(ID)
);
COMMENT ON TABLE USERS_RELATIONSHIPS IS 'Связь пользователей и отношений';
COMMENT ON COLUMN USERS_RELATIONSHIPS.ID IS 'Идентификатор записи';
COMMENT ON COLUMN USERS_RELATIONSHIPS.USER_ID IS 'Идентификатор пользователя';
COMMENT ON COLUMN USERS_RELATIONSHIPS.RELATIONSHIP_ID IS 'Идентификатор отношения';