-- Создание таблиц
CREATE TABLE IF NOT EXISTS RATINGS (
	ID INTEGER NOT NULL AUTO_INCREMENT,
	FULL_NAME CHARACTER VARYING NOT NULL,
	CONSTRAINT RATINGS_PK PRIMARY KEY (ID)
);
COMMENT ON TABLE RATINGS IS 'Таблица рейтингов';
COMMENT ON COLUMN RATINGS.ID IS 'Идентификатор записи';
COMMENT ON COLUMN RATINGS.FULL_NAME IS 'Описание';

CREATE TABLE IF NOT EXISTS GENRES (
	ID INTEGER NOT NULL AUTO_INCREMENT,
	FULL_NAME CHARACTER VARYING NOT NULL,
	CONSTRAINT GENRES_PK PRIMARY KEY (ID),
	CONSTRAINT GENRES_UNIQUE_FULL_NAME UNIQUE (FULL_NAME)
);
COMMENT ON TABLE GENRES IS 'Таблица жанров';
COMMENT ON COLUMN GENRES.ID IS 'Идентификатор записи';
COMMENT ON COLUMN GENRES.FULL_NAME IS 'Наименование';

CREATE TABLE IF NOT EXISTS FILMS (
	ID INTEGER NOT NULL AUTO_INCREMENT,
	FULL_NAME CHARACTER VARYING NOT NULL,
	DESCRIPTION CHARACTER(200) NOT NULL,
	RELEASE_DATE DATE,
	DURATION INTEGER,
	RATING_ID INTEGER,
	CONSTRAINT FILMS_PK PRIMARY KEY (ID),
	CONSTRAINT FILMS_RATINGS_FK FOREIGN KEY (RATING_ID) REFERENCES RATINGS(ID) ON DELETE SET NULL,
	CONSTRAINT FILMS_DURATION_CHK CHECK (DURATION > 0)
);
COMMENT ON TABLE FILMS IS 'Таблица фильмов';
COMMENT ON COLUMN FILMS.ID IS 'Идентификатор записи';
COMMENT ON COLUMN FILMS.FULL_NAME IS 'Наименование';
COMMENT ON COLUMN FILMS.DESCRIPTION IS 'Описание';
COMMENT ON COLUMN FILMS.RELEASE_DATE IS 'Дата релиза';
COMMENT ON COLUMN FILMS.DURATION IS 'Длительность';
COMMENT ON COLUMN FILMS.RATING_ID IS 'Идентификатор рейтинга';

CREATE TABLE IF NOT EXISTS FILMS_GENRES (
	ID INTEGER NOT NULL AUTO_INCREMENT,
	FILM_ID INTEGER NOT NULL,
	GENRE_ID INTEGER NOT NULL,
	CONSTRAINT FILMS_GENRES_PK PRIMARY KEY (ID),
	CONSTRAINT FILMS_GENRES_UNIQUE_FILM_ID_GENRE_ID UNIQUE (FILM_ID,GENRE_ID),
	CONSTRAINT FILMS_GENRES_FILMS_FK FOREIGN KEY (FILM_ID) REFERENCES FILMS(ID) ON DELETE CASCADE,
	CONSTRAINT FILMS_GENRES_GENRES_FK FOREIGN KEY (GENRE_ID) REFERENCES GENRES(ID)ON DELETE CASCADE
);
COMMENT ON TABLE FILMS_GENRES IS 'Связь между фильмами и жанрами';
COMMENT ON COLUMN FILMS_GENRES.ID IS 'Идентификатор записи';
COMMENT ON COLUMN FILMS_GENRES.FILM_ID IS 'Идентификатор фильма';
COMMENT ON COLUMN FILMS_GENRES.GENRE_ID IS 'Идентификатор жанра';

CREATE TABLE IF NOT EXISTS USERS (
	ID INTEGER NOT NULL AUTO_INCREMENT,
	EMAIL CHARACTER(256) NOT NULL,
	LOGIN CHARACTER(256) NOT NULL,
	FULL_NAME CHARACTER VARYING,
	BIRTHDAY DATE NOT NULL,
	CONSTRAINT USERS_PK PRIMARY KEY (ID),
	CONSTRAINT USERS_UNIQUE_EMAIL UNIQUE (EMAIL),
	CONSTRAINT USERS_UNIQUE_LOGIN UNIQUE (LOGIN)
);
COMMENT ON TABLE USERS IS 'Таблица пользователей';
COMMENT ON COLUMN USERS.ID IS 'Идентификатор записи';
COMMENT ON COLUMN USERS.EMAIL IS 'Адрес электронной почты';
COMMENT ON COLUMN USERS.LOGIN IS 'Логин';
COMMENT ON COLUMN USERS.FULL_NAME IS 'Имя';
COMMENT ON COLUMN USERS.BIRTHDAY IS 'Дата рождения';

CREATE TABLE IF NOT EXISTS USERS_FILMS (
	ID INTEGER NOT NULL AUTO_INCREMENT,
	USER_ID INTEGER NOT NULL,
	FILM_ID INTEGER NOT NULL,
	CONSTRAINT USERS_FILMS_PK PRIMARY KEY (ID),
	CONSTRAINT USERS_FILMS_UNIQUE_USER_ID_FILM_ID UNIQUE (USER_ID,FILM_ID),
	CONSTRAINT USERS_FILMS_USERS_FK FOREIGN KEY (USER_ID) REFERENCES USERS(ID) ON DELETE CASCADE,
	CONSTRAINT USERS_FILMS_FILMS_FK FOREIGN KEY (FILM_ID) REFERENCES FILMS(ID) ON DELETE CASCADE
);
COMMENT ON TABLE USERS_FILMS IS 'Связь между пользователями и фильмами';
COMMENT ON COLUMN USERS_FILMS.ID IS 'Идентификатор записи';
COMMENT ON COLUMN USERS_FILMS.USER_ID IS 'Идентификатор пользователя';
COMMENT ON COLUMN USERS_FILMS.FILM_ID IS 'Идентификатор фильма';

CREATE TABLE IF NOT EXISTS FRIENDS (
  ID INTEGER NOT NULL AUTO_INCREMENT,
  USER_ID INTEGER NOT NULL,
  OTHER_ID INTEGER NOT NULL,
  CONSTRAINT FRIENDS_PK PRIMARY KEY (ID),
  CONSTRAINT FRIENDS_UNIQUE_USER_ID_OTHER_ID UNIQUE (USER_ID, OTHER_ID),
  CONSTRAINT FRIENDS_USERS_USER_ID_FK FOREIGN KEY (USER_ID) REFERENCES USERS(ID) ON DELETE CASCADE,
  CONSTRAINT FRIENDS_USERS_OTHER_ID_FK FOREIGN KEY (OTHER_ID) REFERENCES USERS(ID) ON DELETE CASCADE
);
COMMENT ON TABLE FRIENDS IS 'Связь между пользователями';
COMMENT ON COLUMN FRIENDS.ID IS 'Идентификатор записи';
COMMENT ON COLUMN FRIENDS.USER_ID IS 'Идентификатор пользователя-заявителя';
COMMENT ON COLUMN FRIENDS.OTHER_ID IS 'Идентификатор пользователя-получателя';

-- Заполнение справочников
MERGE INTO RATINGS AS r USING
(SELECT q.id,
          q.full_name
     FROM (SELECT 1 AS id,
                  'G' AS full_name
           UNION
           SELECT 2 AS id,
                  'PG' AS full_name
           UNION
           SELECT 3 AS id,
                  'PG-13' AS full_name
           UNION
           SELECT 4 AS id,
                  'R' AS full_name
           UNION
           SELECT 5 AS id,
                  'NC-17' AS full_name) q
    ORDER BY q.id) AS pd ON r.ID = pd.id
WHEN MATCHED THEN UPDATE SET FULL_NAME = pd.full_name
WHEN NOT MATCHED THEN INSERT (ID, FULL_NAME) VALUES (pd.id, pd.full_name);

MERGE INTO GENRES AS g USING
 (SELECT q.id,
         q.full_name
    FROM (SELECT 1 AS id,
                 'Комедия' AS full_name
          UNION
          SELECT 2 AS id,
                 'Драма' AS full_name
          UNION
          SELECT 3 AS id,
                 'Мультфильм' AS full_name
          UNION
          SELECT 4 AS id,
                 'Триллер' AS full_name
          UNION
          SELECT 5 AS id,
                 'Документальный' AS full_name
          UNION
          SELECT 6 AS id,
                 'Боевик' AS full_name) q
   ORDER BY q.id) AS pd ON g.ID = pd.id
WHEN matched THEN UPDATE SET FULL_NAME = pd.full_name
WHEN NOT matched THEN INSERT (ID, FULL_NAME) VALUES (pd.id, pd.full_name);